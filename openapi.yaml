openapi: 3.1.0
info:
  title: GPT Custom Server API
  version: 1.0.0
  description: This API allows a custom GPT instance to interact with files and run Jest tests programmatically.
servers:
  - url: https://everydaywetunnelin.ngrok.io
    description: ngrok public URL
    variables:
      subdomain:
        default: your_subdomain
paths:
  /machineState:
    get:
      summary: Get the current state of the machine with context
      operationId: getMachineState
      responses:
        "200":
          description: Machine state retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  state:
                    type: string
                    example: ""
                  context:
                    type: object
                    properties:
                      gptContextWindow:
                        type: string
                        example: "Some context window data that the gpt will use for help"
                      filesPaths:
                        type: array
                        items:
                          type: string
                        example:
                          - "/path/to/file1"
                          - "/path/to/file2"
  /machineSend:
    post:
      x-openai-isConsequential: false
      summary: Send a command to the GPT
      operationId: machineSend
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                command:
                  type: string
                  example: "gpt.understandsFileStructure"
      responses:
        '200':
          description: Command processed successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  state:
                    type: string
                    description: The state after processing the command
                  context:
                    type: object
                    description: The context associated with the state
                  hints:
                    type: object
                    description: Hints for GPT
                    properties:
                      hint1:
                        type: string
                        example: "Hint 1 description"
                      hint2:
                        type: string
                        example: "Hint 2 description"

  /run-command:
    post:
      x-openai-isConsequential: false
      summary: Run an arbitrary shell command and commit changes
      operationId: runCommand
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                command:
                  type: string
                  example: "npm install xstate"
                commitMessage:
                  type: string
                  example: "Installed xstate package"
                isMutative:
                  type: boolean
                  example: true
                  description: If true, the command will be run and the git diff will be returned with the output. If false, the command will be run and the output will be returned.

      responses:
        "200":
          description: Command executed and changes committed successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Command executed and changes committed successfully"
                  output:
                    type: string
                    example: "Output of the command"
        "400":
          description: Invalid input
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Command and commit message are required"
        "500":
          description: Server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Error executing command or committing changes"

components:
  schemas: {}
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
security:
  - bearerAuth: []
